FROM snowair/debian:php-base

ENV PHP_INI_DIR /usr/local/etc/php
RUN mkdir -p $PHP_INI_DIR/conf.d

##<autogenerated>##
##</autogenerated>##

ENV GPG_KEYS 6E4F6AB321FDC07F2C332E3AC2BF0BC433CFC8B3 1A4E8B7277C42E53DBA9C7B9BCAA30EA9C0D5763
RUN set -xe \
	&& for key in $GPG_KEYS; do \
		gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
	done

ENV PHP_VERSION 7.0.6
COPY docker-php-ext-* /usr/local/bin/

# --enable-mysqlnd is included below because it's harder to compile after the fact the extensions are (since it's a plugin for several extensions, not an extension in itself)

ENV OCI_INSTANT_PATH /usr/lib/instantclient_12_1
ENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:$OCI_INSTANT_PATH
RUN cd /usr/lib \
    && curl -L -o instantclient-basic-linux.x64.zip https://raw.githubusercontent.com/snowair/php-docker/snowair/oracle/instantclient-basic-linux.x64-12.1.0.2.0.zip \
    && curl -L -o instantclient-sdk-linux.x64.zip https://raw.githubusercontent.com/snowair/php-docker/snowair/oracle/instantclient-sdk-linux.x64-12.1.0.2.0.zip \
    && unzip instantclient-basic-linux.x64.zip && unzip instantclient-sdk-linux.x64.zip && ln -s $OCI_INSTANT_PATH/libclntsh.so.*.1  $OCI_INSTANT_PATH/libclntsh.so \
    && rm instantclient*.zip

RUN buildDeps=" \
		$PHP_EXTRA_BUILD_DEPS \
	" \
	&& set -x \
	&& apt-get update && apt-get install -y $buildDeps libaio-dev --no-install-recommends && apt-get clean && rm -rf /var/lib/apt/lists/* \
	&& curl -SL "http://php.net/distributions/php-$PHP_VERSION.tar.xz" -o php.tar.xz \
	&& curl -SL "http://php.net/get/php-$PHP_VERSION.tar.xz.asc/from/this/mirror" -o php.tar.xz.asc \
	&& gpg --verify php.tar.xz.asc \
	&& mkdir -p /usr/src/php \
	&& tar -xof php.tar.xz -C /usr/src/php --strip-components=1 \
	&& rm php.tar.* \
	&& cd /usr/src/php \
	&& ./configure \
		--with-config-file-path="$PHP_INI_DIR" \
		--with-config-file-scan-dir="$PHP_INI_DIR/conf.d" \
		$PHP_EXTRA_CONFIGURE_ARGS \
		--disable-cgi \
		--enable-mysqlnd \
		--with-curl \
		--with-openssl \
		--with-readline \
		--with-recode \
		--with-zlib \
        --with-oci8=shared,instantclient,$OCI_INSTANT_PATH \
        --with-pdo-oci=shared,instantclient,$OCI_INSTANT_PATH,12.1.0.2 \
	&& make -j"$(nproc)" \
	&& make install \
	&& { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } \
	&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps \
	&& make clean

RUN curl -L -o phpredis.zip https://github.com/phpredis/phpredis/archive/php7.zip && unzip phpredis.zip && cd phpredis-php7 && phpize && ./configure && make && make install && cd - && rm -fr phpredis*

RUN docker-php-ext-configure imap  --with-imap --with-imap-ssl --with-kerberos \
    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --enable-gd-native-ttf \
    && docker-php-ext-configure hash --with-mhash \
    && docker-php-ext-install tidy intl wddx xmlrpc  xsl opcache \
       bz2 bcmath calendar dba gd exif ftp gettext imap mbstring mcrypt mysqli pcntl pdo_mysql pdo_pgsql pgsql  sockets shmop  sysvsem soap sysvmsg  sysvshm zip
RUN pear clear-cache ; pear update-channels; pear upgrade; pecl install  swoole solr mongodb imagick  xdebug
RUN docker-php-ext-enable opcache  swoole oci8  pdo_oci solr mongodb imagick xdebug

# 以下扩展暂不支持php7
#RUN pecl install igbinary ev gearman  memcached
#RUN docker-php-ext-enable igbinary ev gearman memcached

##<autogenerated>##
CMD ["php", "-a"]
##</autogenerated>##
